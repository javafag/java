package OOP.Queue;


import java.util.PriorityQueue;


public class Restick implements Comparable<Restick> {

    private String order;
    private int priority;


    public Restick(String order, int priority) {
        this.order = order;
        this.priority = priority;
    }


    @Override
    public int compareTo(Restick other) {
        return Integer.compare(this.priority, other.priority);
    }

    @Override
    public String toString() {
        return "Serving: " + order + " (priority " + priority + ")";
    }

    public static void main(String[] args) {




        PriorityQueue<Restick> resticks = new PriorityQueue<>();

        resticks.add(new Restick("Pizza",4));
        resticks.add(new Restick("Sushi",3));
        resticks.add(new Restick("Coffee",1));
        resticks.add(new Restick("Burger",2));


        while (!resticks.isEmpty()) {
            System.out.println(resticks.poll());
        }

        System.out.println("All orders have been completed!");

    }
}

//üß† –¢–ó –¥–ª—è —Ç–µ–±—è (–ø—Ä–æ—Å—Ç–æ–µ)
//üéØ –ó–∞–¥–∞—á–∞: ‚Äú–û—á–µ—Ä–µ–¥—å –∑–∞–∫–∞–∑–æ–≤‚Äù
//
//–û–ø–∏—Å–∞–Ω–∏–µ:
//
//–°–æ–∑–¥–∞–π –æ—á–µ—Ä–µ–¥—å (Queue<String>)
//
//–î–æ–±–∞–≤—å —Ç—É–¥–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–∫–∞–∑–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ü–∏—Ü—Ü–∞", "–°—É—à–∏", "–ö–æ—Ñ–µ", "–ë—É—Ä–≥–µ—Ä")
//
//–ó–∞—Ç–µ–º –æ–±—Å–ª—É–∂–∏ –≤—Å–µ –∑–∞–∫–∞–∑—ã –ø–æ –ø–æ—Ä—è–¥–∫—É (FIFO):
//        ‚Äî –¥–æ—Å—Ç–∞–≤–∞–π –∏–∑ –æ—á–µ—Ä–µ–¥–∏ (poll) –∏ –ø–µ—á–∞—Ç–∞–π:
//        "–û–±—Å–ª—É–∂–∏–≤–∞–µ—Ç—Å—è –∑–∞–∫–∞–∑: –ü–∏—Ü—Ü–∞"
//        –∏ —Ç–∞–∫, –ø–æ–∫–∞ –æ—á–µ—Ä–µ–¥—å –Ω–µ —Å—Ç–∞–Ω–µ—Ç –ø—É—Å—Ç–æ–π.
//
//–£—Å–ª–æ–≤–∏—è:
//
//–ò—Å–ø–æ–ª—å–∑—É–π Queue<String> –∏ LinkedList.
//
//–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –ø–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –∑–∞–∫–∞–∑—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –≤ –ø–æ—Ä—è–¥–∫–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è.
//
//–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –≤—ã–≤–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ "–í—Å–µ –∑–∞–∫–∞–∑—ã –æ–±—Å–ª—É–∂–µ–Ω—ã!"