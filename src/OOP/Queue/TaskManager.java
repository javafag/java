package OOP.Queue;


import java.util.PriorityQueue;

public class TaskManager implements Comparable<TaskManager> {

    private String name;
    private int priority;
    private int duration;


    public TaskManager(String name, int priority, int duration) {
        this.name = name;
        this.priority = priority;
        this.duration = duration;
    }

    @Override
    public int compareTo(TaskManager other) {
        return Integer.compare(this.priority, other.priority);
    }


    @Override
    public String toString() {
        return name + " (priority: " + priority + ", duration: " + duration + "s )";
    }

    public static void main(String[] args) {


        TaskManager task1 = new TaskManager("Big mamba",2,3);
        TaskManager task2 = new TaskManager("Big mamba",1,2);
        TaskManager task3 = new TaskManager("Big mamba",3,6);
        TaskManager task4 = new TaskManager("Big mamba",4,8);


        PriorityQueue<TaskManager> Queue = new PriorityQueue<>();


        Queue.add(task1);
        Queue.add(task2);
        Queue.add(task3);
        Queue.add(task4);


        while (!Queue.isEmpty()) {
            System.out.println("Next task: " + Queue.poll());
        }

    }


}


//public interface Queue<E> extends Collection<E> {
//    boolean add(E e);        // –¥–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç (–±—Ä–æ—Å–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å)
//    boolean offer(E e);      // –¥–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å)
//
//    E remove();              // —É–¥–∞–ª–∏—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç (–∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø—É—Å—Ç–æ)
//    E poll();                // —É–¥–∞–ª–∏—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç (null, –µ—Å–ª–∏ –ø—É—Å—Ç–æ)
//
//    E element();             // –ø—Ä–æ—Å—Ç–æ –≤–µ—Ä–Ω—É—Ç—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç (–∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø—É—Å—Ç–æ)
//    E peek();



//üß© –¢–ó: "–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏"
//        üìã –û–ø–∏—Å–∞–Ω–∏–µ
//–†–µ–∞–ª–∏–∑—É–π –∫–æ–Ω—Å–æ–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–∞ Java, –∫–æ—Ç–æ—Ä–∞—è –º–æ–¥–µ–ª–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á.
//–ö–∞–∂–¥–∞—è –∑–∞–¥–∞—á–∞ –∏–º–µ–µ—Ç:

//–∏–º—è (String name)
//–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç (int priority), –≥–¥–µ –º–µ–Ω—å—à–µ —á–∏—Å–ª–æ ‚Üí –≤—ã—à–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
//–≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (int duration, —Å–µ–∫—É–Ω–¥—ã)
//
//–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞:
//
//–°—á–∏—Ç–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á (–º–æ–∂–Ω–æ –∑–∞—Ö–∞—Ä–¥–∫–æ–¥–∏—Ç—å –∏–ª–∏ –≤–≤–æ–¥–∏—Ç—å —Å –∫–æ–Ω—Å–æ–ª–∏).
//
//–î–æ–±–∞–≤–∏—Ç—å –∏—Ö –≤ PriorityQueue.
//
//–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ –≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞.
//
//–ü—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏ ‚Äî –≤—ã–≤–æ–¥–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Ä–æ–¥–µ:
//
//–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: Backup database (priority: 1, duration: 5s)
//
//
//–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–¥–∞—á ‚Äî –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
//
//–í—Å–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!
